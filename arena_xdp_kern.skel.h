/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED BY BPFTOOL! */
#ifndef __ARENA_XDP_KERN_SKEL_H__
#define __ARENA_XDP_KERN_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

#define BPF_SKEL_SUPPORTS_MAP_AUTO_ATTACH 1

struct arena_xdp_kern {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *arena_map;
		struct bpf_map *bss;
		struct bpf_map *rodata;
	} maps;
	struct {
		struct bpf_program *xdp_prog;
	} progs;
	struct {
		struct bpf_link *xdp_prog;
	} links;
	struct arena_xdp_kern__bss {
		void *mem;
	} *bss;

#ifdef __cplusplus
	static inline struct arena_xdp_kern *open(const struct bpf_object_open_opts *opts = nullptr);
	static inline struct arena_xdp_kern *open_and_load();
	static inline int load(struct arena_xdp_kern *skel);
	static inline int attach(struct arena_xdp_kern *skel);
	static inline void detach(struct arena_xdp_kern *skel);
	static inline void destroy(struct arena_xdp_kern *skel);
	static inline const void *elf_bytes(size_t *sz);
#endif /* __cplusplus */
};

static void
arena_xdp_kern__destroy(struct arena_xdp_kern *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
arena_xdp_kern__create_skeleton(struct arena_xdp_kern *obj);

static inline struct arena_xdp_kern *
arena_xdp_kern__open_opts(const struct bpf_object_open_opts *opts)
{
	struct arena_xdp_kern *obj;
	int err;

	obj = (struct arena_xdp_kern *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = arena_xdp_kern__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	arena_xdp_kern__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct arena_xdp_kern *
arena_xdp_kern__open(void)
{
	return arena_xdp_kern__open_opts(NULL);
}

static inline int
arena_xdp_kern__load(struct arena_xdp_kern *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct arena_xdp_kern *
arena_xdp_kern__open_and_load(void)
{
	struct arena_xdp_kern *obj;
	int err;

	obj = arena_xdp_kern__open();
	if (!obj)
		return NULL;
	err = arena_xdp_kern__load(obj);
	if (err) {
		arena_xdp_kern__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
arena_xdp_kern__attach(struct arena_xdp_kern *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
arena_xdp_kern__detach(struct arena_xdp_kern *obj)
{
	bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *arena_xdp_kern__elf_bytes(size_t *sz);

static inline int
arena_xdp_kern__create_skeleton(struct arena_xdp_kern *obj)
{
	struct bpf_object_skeleton *s;
	struct bpf_map_skeleton *map __attribute__((unused));
	int err;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)	{
		err = -ENOMEM;
		goto err;
	}

	s->sz = sizeof(*s);
	s->name = "arena_xdp_kern";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 3;
	s->map_skel_sz = 24;
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt,
			sizeof(*s->maps) > 24 ? sizeof(*s->maps) : 24);
	if (!s->maps) {
		err = -ENOMEM;
		goto err;
	}

	map = (struct bpf_map_skeleton *)((char *)s->maps + 0 * s->map_skel_sz);
	map->name = "arena_map";
	map->map = &obj->maps.arena_map;

	map = (struct bpf_map_skeleton *)((char *)s->maps + 1 * s->map_skel_sz);
	map->name = "arena_xd.bss";
	map->map = &obj->maps.bss;
	map->mmaped = (void **)&obj->bss;

	map = (struct bpf_map_skeleton *)((char *)s->maps + 2 * s->map_skel_sz);
	map->name = "arena_xd.rodata";
	map->map = &obj->maps.rodata;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs) {
		err = -ENOMEM;
		goto err;
	}

	s->progs[0].name = "xdp_prog";
	s->progs[0].prog = &obj->progs.xdp_prog;
	s->progs[0].link = &obj->links.xdp_prog;

	s->data = arena_xdp_kern__elf_bytes(&s->data_sz);

	obj->skeleton = s;
	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return err;
}

static inline const void *arena_xdp_kern__elf_bytes(size_t *sz)
{
	static const char data[] __attribute__((__aligned__(8))) = "\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x28\x19\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x1c\0\
\x01\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb7\x02\0\0\x09\0\0\0\x85\0\0\0\x06\
\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x79\x13\0\0\0\0\0\0\x55\x03\x08\0\0\
\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\x10\0\0\xff\xff\xff\xff\x18\x01\
\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\xb7\x02\0\0\x15\0\0\0\x85\0\0\0\x06\0\0\0\x05\0\
\x0c\0\0\0\0\0\xbf\x36\x01\0\x01\0\0\0\x18\x01\0\0\x1e\0\0\0\0\0\0\0\0\0\0\0\
\xb7\x02\0\0\x1a\0\0\0\x85\0\0\0\x06\0\0\0\xb7\x01\0\0\x05\0\0\0\x7b\x16\0\0\0\
\0\0\0\x18\x01\0\0\x38\0\0\0\0\0\0\0\0\0\0\0\xb7\x02\0\0\x11\0\0\0\xb7\x03\0\0\
\x05\0\0\0\x85\0\0\0\x06\0\0\0\xb7\0\0\0\x02\0\0\0\x95\0\0\0\0\0\0\0\x78\x64\
\x70\x20\x70\x72\x6f\x67\0\x6e\x6f\x74\x20\x73\x65\x65\x69\x6e\x20\x74\x68\x65\
\x20\x6d\x65\x6d\x6f\x72\x79\0\x78\x64\x70\x20\x61\x72\x65\x6e\x61\x20\x66\x69\
\x72\x73\x74\x20\x62\x79\x74\x65\x20\x3d\x20\x25\x70\0\x61\x72\x65\x6e\x61\x20\
\x69\x6e\x74\x20\x3d\x20\x25\x6c\x6c\x64\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x47\x50\x4c\0\x14\0\0\0\x05\0\x08\0\x01\0\0\0\x04\0\
\0\0\x04\x88\x01\xa8\x01\x01\x53\0\x01\x11\x01\x25\x25\x13\x05\x03\x25\x72\x17\
\x10\x17\x1b\x25\x11\x1b\x12\x06\x73\x17\x8c\x01\x17\0\0\x02\x34\0\x03\x25\x49\
\x13\x3f\x19\x3a\x0b\x3b\x0b\x02\x18\0\0\x03\x0f\0\0\0\x04\x2e\x01\x11\x1b\x12\
\x06\x40\x18\x7a\x19\x03\x25\x3a\x0b\x3b\x0b\x27\x19\x49\x13\x3f\x19\0\0\x05\
\x34\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\x02\x18\0\0\x06\x05\0\x03\x25\x3a\x0b\
\x3b\x0b\x49\x13\0\0\x07\x34\0\x02\x22\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x08\
\x48\0\x7f\x13\x7d\x1b\0\0\x09\x01\x01\x49\x13\0\0\x0a\x21\0\x49\x13\x37\x0b\0\
\0\x0b\x26\0\x49\x13\0\0\x0c\x24\0\x03\x25\x3e\x0b\x0b\x0b\0\0\x0d\x24\0\x03\
\x25\x0b\x0b\x3e\x0b\0\0\x0e\x34\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\0\0\x0f\x0f\
\0\x49\x13\0\0\x10\x15\x01\x49\x13\x27\x19\0\0\x11\x05\0\x49\x13\0\0\x12\x18\0\
\0\0\x13\x16\0\x49\x13\x03\x25\x3a\x0b\x3b\x0b\0\0\x14\x13\x01\x0b\x0b\x3a\x0b\
\x3b\x0b\0\0\x15\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\x38\x0b\0\0\x16\x21\0\
\x49\x13\x37\x05\0\0\x17\x04\x01\x49\x13\x03\x25\x0b\x0b\x3a\x0b\x3b\x05\0\0\
\x18\x28\0\x03\x25\x1c\x0f\0\0\x19\x2e\x01\x03\x25\x3a\x0b\x3b\x0b\x27\x19\x49\
\x13\x3c\x19\x3f\x19\0\0\x1a\x13\x01\x03\x25\x0b\x0b\x3a\x0b\x3b\x05\0\0\x1b\
\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x05\x38\x0b\0\0\0\x09\x02\0\0\x05\0\x01\x08\
\0\0\0\0\x01\0\x1d\0\x01\x08\0\0\0\0\0\0\0\x02\x07\xf0\0\0\0\x08\0\0\0\x0c\0\0\
\0\x02\x03\x32\0\0\0\0\x1a\x02\xa1\0\x03\x04\x07\xf0\0\0\0\x01\x5a\x18\0\x33\
\x4e\x01\0\0\x05\x04\x86\0\0\0\0\x34\x02\xa1\x01\x05\x04\xd7\0\0\0\0\x37\x02\
\xa1\x02\x05\x04\xe3\0\0\0\0\x41\x02\xa1\x03\x05\x04\xef\0\0\0\0\x44\x02\xa1\
\x04\x06\x1e\0\x33\xc4\x01\0\0\x07\0\x19\0\x40\x9d\x01\0\0\x08\x8f\x01\0\0\x08\
\0\x09\x92\0\0\0\x0a\x9b\0\0\0\x09\0\x0b\x97\0\0\0\x0c\x05\x06\x01\x0d\x06\x08\
\x07\x0e\x07\xa7\0\0\0\x02\xb9\x0b\xac\0\0\0\x0f\xb1\0\0\0\x10\xc2\0\0\0\x11\
\xc6\0\0\0\x11\xcb\0\0\0\x12\0\x0c\x08\x05\x08\x0f\x92\0\0\0\x13\xd3\0\0\0\x0a\
\x01\x1b\x0c\x09\x07\x04\x09\x92\0\0\0\x0a\x9b\0\0\0\x15\0\x09\x92\0\0\0\x0a\
\x9b\0\0\0\x1a\0\x09\x92\0\0\0\x0a\x9b\0\0\0\x11\0\x02\x0b\x06\x01\0\0\0\x49\
\x02\xa1\x05\x09\x97\0\0\0\x0a\x9b\0\0\0\x04\0\x02\x0c\x1d\x01\0\0\0\x18\x02\
\xa1\x06\x14\x18\0\x14\x15\x0d\x3d\x01\0\0\0\x15\0\x15\x0f\x52\x01\0\0\0\x16\
\x08\x15\x10\x64\x01\0\0\0\x17\x10\0\x0f\x42\x01\0\0\x09\x4e\x01\0\0\x0a\x9b\0\
\0\0\x21\0\x0c\x0e\x05\x04\x0f\x57\x01\0\0\x09\x4e\x01\0\0\x16\x9b\0\0\0\0\x04\
\0\x0f\x69\x01\0\0\x09\x4e\x01\0\0\x0a\x9b\0\0\0\x02\0\x17\xd3\0\0\0\x16\x04\
\x03\x3d\x19\x18\x11\0\x18\x12\x01\x18\x13\x02\x18\x14\x03\x18\x15\x04\0\x19\
\x17\0\x0e\xc2\0\0\0\x11\x32\0\0\0\0\x0f\xa2\x01\0\0\x13\xaa\x01\0\0\x1d\0\x12\
\x14\x08\0\x10\x15\x1a\xb8\x01\0\0\0\x11\0\0\x13\xc0\x01\0\0\x1c\x01\x1f\x0c\
\x1b\x07\x08\x0f\xc9\x01\0\0\x1a\x25\x18\x03\x48\x19\x1b\x1f\xcb\0\0\0\x03\x49\
\x19\0\x1b\x20\xcb\0\0\0\x03\x4a\x19\x04\x1b\x21\xcb\0\0\0\x03\x4b\x19\x08\x1b\
\x22\xcb\0\0\0\x03\x4d\x19\x0c\x1b\x23\xcb\0\0\0\x03\x4e\x19\x10\x1b\x24\xcb\0\
\0\0\x03\x50\x19\x14\0\0\x9c\0\0\0\x05\0\0\0\0\0\0\0\x69\0\0\0\x7a\0\0\0\x91\0\
\0\0\x95\0\0\0\x9d\0\0\0\xa2\0\0\0\xb6\0\0\0\xc7\0\0\0\xcc\0\0\0\xd9\0\0\0\xdf\
\0\0\0\xe7\0\0\0\xf1\0\0\0\xf6\0\0\0\xfa\0\0\0\x04\x01\0\0\x10\x01\0\0\x1c\x01\
\0\0\x25\x01\0\0\x2e\x01\0\0\x35\x01\0\0\x42\x01\0\0\x4d\x01\0\0\x60\x01\0\0\
\x69\x01\0\0\x6b\x01\0\0\x73\x01\0\0\x86\x01\0\0\x8c\x01\0\0\x94\x01\0\0\x98\
\x01\0\0\x9d\x01\0\0\xa6\x01\0\0\xb0\x01\0\0\xc0\x01\0\0\xcf\x01\0\0\xde\x01\0\
\0\x63\x6c\x61\x6e\x67\x20\x76\x65\x72\x73\x69\x6f\x6e\x20\x31\x39\x2e\x31\x2e\
\x30\x20\x28\x68\x74\x74\x70\x73\x3a\x2f\x2f\x67\x69\x74\x68\x75\x62\x2e\x63\
\x6f\x6d\x2f\x6c\x6c\x76\x6d\x2f\x6c\x6c\x76\x6d\x2d\x70\x72\x6f\x6a\x65\x63\
\x74\x2e\x67\x69\x74\x20\x61\x34\x62\x66\x36\x63\x64\x37\x63\x66\x62\x31\x61\
\x31\x34\x32\x31\x62\x61\x39\x32\x62\x63\x61\x39\x64\x30\x31\x37\x62\x34\x39\
\x39\x33\x36\x63\x35\x35\x65\x34\x29\0\x61\x72\x65\x6e\x61\x5f\x78\x64\x70\x5f\
\x6b\x65\x72\x6e\x2e\x63\0\x2f\x68\x6f\x6d\x65\x2f\x65\x75\x6e\x67\x67\x61\x2f\
\x62\x70\x66\x5f\x61\x72\x65\x6e\x61\0\x6d\x65\x6d\0\x5f\x5f\x5f\x5f\x66\x6d\
\x74\0\x63\x68\x61\x72\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\
\x54\x59\x50\x45\x5f\x5f\0\x62\x70\x66\x5f\x74\x72\x61\x63\x65\x5f\x70\x72\x69\
\x6e\x74\x6b\0\x6c\x6f\x6e\x67\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\
\x74\0\x5f\x5f\x75\x33\x32\0\x4c\x49\x43\x45\x4e\x53\x45\0\x61\x72\x65\x6e\x61\
\x5f\x6d\x61\x70\0\x74\x79\x70\x65\0\x69\x6e\x74\0\x6d\x61\x70\x5f\x66\x6c\x61\
\x67\x73\0\x6d\x61\x78\x5f\x65\x6e\x74\x72\x69\x65\x73\0\x58\x44\x50\x5f\x41\
\x42\x4f\x52\x54\x45\x44\0\x58\x44\x50\x5f\x44\x52\x4f\x50\0\x58\x44\x50\x5f\
\x50\x41\x53\x53\0\x58\x44\x50\x5f\x54\x58\0\x58\x44\x50\x5f\x52\x45\x44\x49\
\x52\x45\x43\x54\0\x78\x64\x70\x5f\x61\x63\x74\x69\x6f\x6e\0\x6d\x79\x5f\x6b\
\x66\x75\x6e\x63\x5f\x72\x65\x67\x5f\x61\x72\x65\x6e\x61\0\x78\x64\x70\x5f\x70\
\x72\x6f\x67\0\x65\0\x63\x6f\x75\x6e\x74\x65\x72\0\x75\x6e\x73\x69\x67\x6e\x65\
\x64\x20\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\0\x5f\x5f\x75\x36\x34\0\x65\x6e\
\x74\x72\x79\x5f\x74\0\x63\x74\x78\0\x64\x61\x74\x61\0\x64\x61\x74\x61\x5f\x65\
\x6e\x64\0\x64\x61\x74\x61\x5f\x6d\x65\x74\x61\0\x69\x6e\x67\x72\x65\x73\x73\
\x5f\x69\x66\x69\x6e\x64\x65\x78\0\x72\x78\x5f\x71\x75\x65\x75\x65\x5f\x69\x6e\
\x64\x65\x78\0\x65\x67\x72\x65\x73\x73\x5f\x69\x66\x69\x6e\x64\x65\x78\0\x78\
\x64\x70\x5f\x6d\x64\0\x4c\0\0\0\x05\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x09\0\0\0\0\0\0\0\x1e\0\0\0\0\0\0\0\x38\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x58\0\0\0\0\0\0\0\0\0\0\x9f\xeb\x01\0\x18\0\0\0\0\0\0\
\0\x34\x03\0\0\x34\x03\0\0\x79\x02\0\0\0\0\0\0\0\0\0\x02\x03\0\0\0\x01\0\0\0\0\
\0\0\x01\x04\0\0\0\x20\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\
\x21\0\0\0\x05\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x02\x06\0\0\0\
\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\x02\x08\
\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x02\0\0\0\0\0\0\0\x03\0\0\
\x04\x18\0\0\0\x19\0\0\0\x01\0\0\0\0\0\0\0\x1e\0\0\0\x05\0\0\0\x40\0\0\0\x28\0\
\0\0\x07\0\0\0\x80\0\0\0\x34\0\0\0\0\0\0\x0e\x09\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\
\x02\x0c\0\0\0\x3e\0\0\0\x06\0\0\x04\x18\0\0\0\x45\0\0\0\x0d\0\0\0\0\0\0\0\x4a\
\0\0\0\x0d\0\0\0\x20\0\0\0\x53\0\0\0\x0d\0\0\0\x40\0\0\0\x5d\0\0\0\x0d\0\0\0\
\x60\0\0\0\x6d\0\0\0\x0d\0\0\0\x80\0\0\0\x7c\0\0\0\x0d\0\0\0\xa0\0\0\0\x8b\0\0\
\0\0\0\0\x08\x0e\0\0\0\x91\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\x01\0\0\
\x0d\x02\0\0\0\x9e\0\0\0\x0b\0\0\0\xa2\0\0\0\x01\0\0\x0c\x0f\0\0\0\0\0\0\0\x01\
\0\0\x0d\x12\0\0\0\0\0\0\0\x13\0\0\0\xe4\x01\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\
\x01\0\0\0\0\0\0\0\x02\0\0\0\0\xe9\x01\0\0\x02\0\0\x0c\x11\0\0\0\xfc\x01\0\0\0\
\0\0\x0e\x13\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x0a\x17\0\0\0\0\x02\0\0\0\0\0\x01\
\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x16\0\0\0\x04\0\0\0\x09\0\0\0\
\x05\x02\0\0\0\0\0\x0e\x18\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x16\0\0\0\
\x04\0\0\0\x15\0\0\0\x16\x02\0\0\0\0\0\x0e\x1a\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\0\0\0\x16\0\0\0\x04\0\0\0\x1a\0\0\0\x29\x02\0\0\0\0\0\x0e\x1c\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x03\0\0\0\0\x16\0\0\0\x04\0\0\0\x11\0\0\0\x3c\x02\0\0\0\0\0\x0e\
\x1e\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x17\0\0\0\x04\0\0\0\x04\0\0\0\x4f\
\x02\0\0\0\0\0\x0e\x20\0\0\0\x01\0\0\0\x57\x02\0\0\x01\0\0\x0f\0\0\0\0\x15\0\0\
\0\0\0\0\0\x08\0\0\0\x5c\x02\0\0\x01\0\0\x0f\0\0\0\0\x14\0\0\0\0\0\0\0\0\0\0\0\
\x63\x02\0\0\x01\0\0\x0f\0\0\0\0\x0a\0\0\0\0\0\0\0\x18\0\0\0\x69\x02\0\0\x04\0\
\0\x0f\0\0\0\0\x19\0\0\0\0\0\0\0\x09\0\0\0\x1b\0\0\0\x09\0\0\0\x15\0\0\0\x1d\0\
\0\0\x1e\0\0\0\x1a\0\0\0\x1f\0\0\0\x38\0\0\0\x11\0\0\0\x71\x02\0\0\x01\0\0\x0f\
\0\0\0\0\x21\0\0\0\0\0\0\0\x04\0\0\0\0\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\x41\
\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x74\x79\x70\x65\0\x6d\
\x61\x70\x5f\x66\x6c\x61\x67\x73\0\x6d\x61\x78\x5f\x65\x6e\x74\x72\x69\x65\x73\
\0\x61\x72\x65\x6e\x61\x5f\x6d\x61\x70\0\x78\x64\x70\x5f\x6d\x64\0\x64\x61\x74\
\x61\0\x64\x61\x74\x61\x5f\x65\x6e\x64\0\x64\x61\x74\x61\x5f\x6d\x65\x74\x61\0\
\x69\x6e\x67\x72\x65\x73\x73\x5f\x69\x66\x69\x6e\x64\x65\x78\0\x72\x78\x5f\x71\
\x75\x65\x75\x65\x5f\x69\x6e\x64\x65\x78\0\x65\x67\x72\x65\x73\x73\x5f\x69\x66\
\x69\x6e\x64\x65\x78\0\x5f\x5f\x75\x33\x32\0\x75\x6e\x73\x69\x67\x6e\x65\x64\
\x20\x69\x6e\x74\0\x63\x74\x78\0\x78\x64\x70\x5f\x70\x72\x6f\x67\0\x78\x64\x70\
\0\x2f\x68\x6f\x6d\x65\x2f\x65\x75\x6e\x67\x67\x61\x2f\x62\x70\x66\x5f\x61\x72\
\x65\x6e\x61\x2f\x61\x72\x65\x6e\x61\x5f\x78\x64\x70\x5f\x6b\x65\x72\x6e\x2e\
\x63\0\x20\x20\x20\x20\x62\x70\x66\x5f\x70\x72\x69\x6e\x74\x6b\x28\x22\x78\x64\
\x70\x20\x70\x72\x6f\x67\x22\x29\x3b\0\x20\x20\x20\x20\x69\x66\x20\x28\x6d\x65\
\x6d\x20\x3d\x3d\x20\x4e\x55\x4c\x4c\x29\x20\x7b\0\x20\x20\x20\x20\x20\x20\x20\
\x20\x6d\x79\x5f\x6b\x66\x75\x6e\x63\x5f\x72\x65\x67\x5f\x61\x72\x65\x6e\x61\
\x28\x26\x61\x72\x65\x6e\x61\x5f\x6d\x61\x70\x29\x3b\0\x09\x09\x62\x70\x66\x5f\
\x70\x72\x69\x6e\x74\x6b\x28\x22\x6e\x6f\x74\x20\x73\x65\x65\x69\x6e\x20\x74\
\x68\x65\x20\x6d\x65\x6d\x6f\x72\x79\x22\x29\x3b\0\x20\x20\x20\x20\x20\x20\x20\
\x20\x72\x65\x74\x75\x72\x6e\x20\x58\x44\x50\x5f\x50\x41\x53\x53\x3b\0\x20\x20\
\x20\x20\x62\x70\x66\x5f\x70\x72\x69\x6e\x74\x6b\x28\x22\x78\x64\x70\x20\x61\
\x72\x65\x6e\x61\x20\x66\x69\x72\x73\x74\x20\x62\x79\x74\x65\x20\x3d\x20\x25\
\x70\x22\x2c\x20\x65\x29\x3b\0\x09\x65\x2d\x3e\x63\x6f\x75\x6e\x74\x65\x72\x20\
\x3d\x20\x35\x3b\0\x20\x20\x20\x20\x62\x70\x66\x5f\x70\x72\x69\x6e\x74\x6b\x28\
\x22\x61\x72\x65\x6e\x61\x20\x69\x6e\x74\x20\x3d\x20\x25\x6c\x6c\x64\x22\x2c\
\x20\x65\x2d\x3e\x63\x6f\x75\x6e\x74\x65\x72\x29\x3b\0\x7d\0\x6c\x6f\x6e\x67\0\
\x6d\x79\x5f\x6b\x66\x75\x6e\x63\x5f\x72\x65\x67\x5f\x61\x72\x65\x6e\x61\0\x6d\
\x65\x6d\0\x63\x68\x61\x72\0\x78\x64\x70\x5f\x70\x72\x6f\x67\x2e\x5f\x5f\x5f\
\x5f\x66\x6d\x74\0\x78\x64\x70\x5f\x70\x72\x6f\x67\x2e\x5f\x5f\x5f\x5f\x66\x6d\
\x74\x2e\x31\0\x78\x64\x70\x5f\x70\x72\x6f\x67\x2e\x5f\x5f\x5f\x5f\x66\x6d\x74\
\x2e\x32\0\x78\x64\x70\x5f\x70\x72\x6f\x67\x2e\x5f\x5f\x5f\x5f\x66\x6d\x74\x2e\
\x33\0\x4c\x49\x43\x45\x4e\x53\x45\0\x2e\x62\x73\x73\0\x2e\x6b\x73\x79\x6d\x73\
\0\x2e\x6d\x61\x70\x73\0\x2e\x72\x6f\x64\x61\x74\x61\0\x6c\x69\x63\x65\x6e\x73\
\x65\0\0\0\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x14\0\0\0\x14\0\0\0\xac\0\0\0\xc0\
\0\0\0\0\0\0\0\x08\0\0\0\xab\0\0\0\x01\0\0\0\0\0\0\0\x10\0\0\0\x10\0\0\0\xab\0\
\0\0\x0a\0\0\0\0\0\0\0\xaf\0\0\0\xd7\0\0\0\x05\xd0\0\0\x20\0\0\0\xaf\0\0\0\xf3\
\0\0\0\x09\xd4\0\0\x38\0\0\0\xaf\0\0\0\xf3\0\0\0\x09\xd4\0\0\x40\0\0\0\xaf\0\0\
\0\x0a\x01\0\0\x09\xd8\0\0\x58\0\0\0\xaf\0\0\0\x32\x01\0\0\x03\xdc\0\0\x78\0\0\
\0\xaf\0\0\0\x58\x01\0\0\x09\xe0\0\0\x88\0\0\0\xaf\0\0\0\x71\x01\0\0\x05\x04\
\x01\0\xb0\0\0\0\xaf\0\0\0\xa1\x01\0\0\x0d\x0c\x01\0\xb8\0\0\0\xaf\0\0\0\xb2\
\x01\0\0\x05\x10\x01\0\xe0\0\0\0\xaf\0\0\0\xe2\x01\0\0\x01\x1c\x01\0\0\0\0\0\
\x0c\0\0\0\xff\xff\xff\xff\x04\0\x08\0\x08\x7c\x0b\0\x14\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\xf0\0\0\0\0\0\0\0\xca\0\0\0\x05\0\x08\0\x7e\0\0\0\x08\x01\x01\xfb\x0e\
\x0d\0\x01\x01\x01\x01\0\0\0\x01\0\0\x01\x01\x01\x1f\x03\0\0\0\0\x17\0\0\0\x24\
\0\0\0\x03\x01\x1f\x02\x0f\x05\x1e\x04\x35\0\0\0\0\xca\x08\x0c\xf9\xf1\x8b\x9b\
\xf1\xb2\x68\x04\xe6\xc3\xd7\xb1\x5c\x46\0\0\0\x01\xb8\x10\xf2\x70\x73\x3e\x10\
\x63\x19\xb6\x7e\xf5\x12\xc6\x24\x6e\x76\0\0\0\x02\x11\xf0\x96\x23\xd7\x23\0\
\x81\x24\x7a\xfa\xcd\xc7\xc1\xa6\x41\x88\0\0\0\x01\x09\xe1\x20\xea\x3b\x68\x28\
\xd9\x62\x80\x05\xfa\xfc\xb6\xe7\xae\x04\0\x05\x05\x0a\0\x09\x02\0\0\0\0\0\0\0\
\0\x03\x33\x01\x05\x09\x4b\x06\x3c\x06\x21\x05\x03\x3d\x05\x09\x4b\x05\0\x06\
\x03\x48\x20\x05\x05\x06\x03\xc1\0\x20\x06\x03\xbf\x7f\x4a\x05\x0d\x06\x03\xc3\
\0\x20\x05\x05\x21\x05\x01\x5b\x02\x02\0\x01\x01\x2f\x68\x6f\x6d\x65\x2f\x65\
\x75\x6e\x67\x67\x61\x2f\x62\x70\x66\x5f\x61\x72\x65\x6e\x61\0\x2f\x68\x6f\x6d\
\x65\x2f\x65\x75\x6e\x67\x67\x61\0\x2f\x75\x73\x72\x2f\x69\x6e\x63\x6c\x75\x64\
\x65\x2f\x62\x70\x66\0\x61\x72\x65\x6e\x61\x5f\x78\x64\x70\x5f\x6b\x65\x72\x6e\
\x2e\x63\0\x6c\x69\x6e\x75\x78\x2d\x36\x2e\x31\x35\x2e\x36\x2f\x75\x73\x72\x2f\
\x69\x6e\x63\x6c\x75\x64\x65\x2f\x61\x73\x6d\x2d\x67\x65\x6e\x65\x72\x69\x63\
\x2f\x69\x6e\x74\x2d\x6c\x6c\x36\x34\x2e\x68\0\x62\x70\x66\x5f\x68\x65\x6c\x70\
\x65\x72\x5f\x64\x65\x66\x73\x2e\x68\0\x6c\x69\x6e\x75\x78\x2d\x36\x2e\x31\x35\
\x2e\x36\x2f\x74\x6f\x6f\x6c\x73\x2f\x69\x6e\x63\x6c\x75\x64\x65\x2f\x75\x61\
\x70\x69\x2f\x6c\x69\x6e\x75\x78\x2f\x62\x70\x66\x2e\x68\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe8\0\0\0\x04\0\xf1\xff\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x22\0\0\
\0\x01\0\x06\0\0\0\0\0\0\0\0\0\x09\0\0\0\0\0\0\0\x5b\x01\0\0\x01\0\x06\0\x09\0\
\0\0\0\0\0\0\x15\0\0\0\0\0\0\0\x48\x01\0\0\x01\0\x06\0\x1e\0\0\0\0\0\0\0\x1a\0\
\0\0\0\0\0\0\x35\x01\0\0\x01\0\x06\0\x38\0\0\0\0\0\0\0\x11\0\0\0\0\0\0\0\0\0\0\
\0\x03\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x09\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0a\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x03\0\x0d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0f\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x03\0\x16\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x18\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x1a\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb6\0\
\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\xf0\0\0\0\0\0\0\0\xb2\0\0\0\x11\0\x05\0\0\0\0\
\0\0\0\0\0\x08\0\0\0\0\0\0\0\x98\0\0\0\x11\0\x07\0\0\0\0\0\0\0\0\0\x18\0\0\0\0\
\0\0\0\x11\x01\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x2d\x01\0\0\x11\0\
\x08\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x07\0\0\0\
\x20\0\0\0\0\0\0\0\x01\0\0\0\x11\0\0\0\x40\0\0\0\0\0\0\0\x01\0\0\0\x12\0\0\0\
\x50\0\0\0\0\0\0\0\x0a\0\0\0\x13\0\0\0\x58\0\0\0\0\0\0\0\x01\0\0\0\x07\0\0\0\
\x88\0\0\0\0\0\0\0\x01\0\0\0\x07\0\0\0\xb8\0\0\0\0\0\0\0\x01\0\0\0\x07\0\0\0\
\x08\0\0\0\0\0\0\0\x03\0\0\0\x09\0\0\0\x11\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x15\0\0\0\0\0\0\0\x03\0\0\0\x0e\0\0\0\x1f\0\0\0\0\0\0\0\x03\0\0\0\x0c\0\0\0\
\x23\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x08\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x0c\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x10\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x14\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x18\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x1c\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x20\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x24\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x28\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x2c\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x30\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x34\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x38\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x3c\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x40\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x44\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x48\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x4c\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x50\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x54\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x58\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x5c\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x60\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x64\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x68\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x6c\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x70\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x74\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x78\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x7c\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x80\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x84\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x88\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x8c\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x90\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x94\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x98\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x9c\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x08\0\0\0\0\0\0\0\x02\0\0\0\x11\0\0\0\
\x10\0\0\0\0\0\0\0\x02\0\0\0\x07\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\x07\0\0\0\
\x20\0\0\0\0\0\0\0\x02\0\0\0\x07\0\0\0\x28\0\0\0\0\0\0\0\x02\0\0\0\x07\0\0\0\
\x30\0\0\0\0\0\0\0\x02\0\0\0\x14\0\0\0\x38\0\0\0\0\0\0\0\x02\0\0\0\x12\0\0\0\
\x40\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x48\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\
\xc0\x02\0\0\0\0\0\0\x04\0\0\0\x11\0\0\0\xd8\x02\0\0\0\0\0\0\x03\0\0\0\x13\0\0\
\0\xf0\x02\0\0\0\0\0\0\x04\0\0\0\x12\0\0\0\x08\x03\0\0\0\0\0\0\x03\0\0\0\x07\0\
\0\0\x14\x03\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x20\x03\0\0\0\0\0\0\x03\0\0\0\x07\
\0\0\0\x2c\x03\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x44\x03\0\0\0\0\0\0\x04\0\0\0\
\x14\0\0\0\x2c\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x40\0\0\0\0\0\0\0\x04\0\0\0\
\x02\0\0\0\x50\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x60\0\0\0\0\0\0\0\x04\0\0\0\
\x02\0\0\0\x70\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x80\0\0\0\0\0\0\0\x04\0\0\0\
\x02\0\0\0\x90\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xa0\0\0\0\0\0\0\0\x04\0\0\0\
\x02\0\0\0\xb0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xc0\0\0\0\0\0\0\0\x04\0\0\0\
\x02\0\0\0\xd0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x14\0\0\0\0\0\0\0\x03\0\0\0\
\x0d\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x22\0\0\0\0\0\0\0\x03\0\0\0\
\x0f\0\0\0\x26\0\0\0\0\0\0\0\x03\0\0\0\x0f\0\0\0\x2a\0\0\0\0\0\0\0\x03\0\0\0\
\x0f\0\0\0\x36\0\0\0\0\0\0\0\x03\0\0\0\x0f\0\0\0\x4b\0\0\0\0\0\0\0\x03\0\0\0\
\x0f\0\0\0\x60\0\0\0\0\0\0\0\x03\0\0\0\x0f\0\0\0\x75\0\0\0\0\0\0\0\x03\0\0\0\
\x0f\0\0\0\x92\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\0\x2e\x64\x65\x62\x75\x67\x5f\
\x61\x62\x62\x72\x65\x76\0\x2e\x74\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\
\x46\x2e\x65\x78\x74\0\x78\x64\x70\x5f\x70\x72\x6f\x67\x2e\x5f\x5f\x5f\x5f\x66\
\x6d\x74\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\x6f\x63\x6c\x69\x73\x74\x73\0\x2e\
\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\x72\x5f\x6f\x66\x66\x73\x65\
\x74\x73\0\x2e\x62\x73\x73\0\x2e\x6d\x61\x70\x73\0\x2e\x64\x65\x62\x75\x67\x5f\
\x73\x74\x72\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\x69\x6e\x65\x5f\x73\x74\x72\0\
\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x61\x64\x64\x72\0\x2e\x72\x65\x6c\
\x78\x64\x70\0\x61\x72\x65\x6e\x61\x5f\x6d\x61\x70\0\x2e\x72\x65\x6c\x2e\x64\
\x65\x62\x75\x67\x5f\x69\x6e\x66\x6f\0\x6d\x65\x6d\0\x78\x64\x70\x5f\x70\x72\
\x6f\x67\0\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\
\x67\x5f\x6c\x69\x6e\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x66\x72\
\x61\x6d\x65\0\x61\x72\x65\x6e\x61\x5f\x78\x64\x70\x5f\x6b\x65\x72\x6e\x2e\x63\
\0\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x2e\x72\x6f\x64\
\x61\x74\x61\0\x6d\x79\x5f\x6b\x66\x75\x6e\x63\x5f\x72\x65\x67\x5f\x61\x72\x65\
\x6e\x61\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\0\x4c\x49\x43\x45\x4e\x53\x45\0\x78\
\x64\x70\x5f\x70\x72\x6f\x67\x2e\x5f\x5f\x5f\x5f\x66\x6d\x74\x2e\x33\0\x78\x64\
\x70\x5f\x70\x72\x6f\x67\x2e\x5f\x5f\x5f\x5f\x66\x6d\x74\x2e\x32\0\x78\x64\x70\
\x5f\x70\x72\x6f\x67\x2e\x5f\x5f\x5f\x5f\x66\x6d\x74\x2e\x31\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf9\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\xb8\x17\0\0\0\0\0\0\x6e\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x94\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\
\xf0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x90\0\0\0\
\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x38\x12\0\0\0\0\0\0\x70\0\0\0\0\0\
\0\0\x1b\0\0\0\x03\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x5a\0\0\0\x08\0\0\
\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x30\x01\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x09\x01\0\0\x01\0\0\0\x02\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x30\x01\0\0\0\0\0\0\x49\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x5f\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x80\x01\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xbf\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x98\
\x01\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x33\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9c\x01\0\0\0\0\0\0\
\x18\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb4\x01\0\0\0\0\0\0\x4b\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa6\0\0\0\x01\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\x02\0\0\0\0\0\0\x0d\x02\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa2\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\xa8\x12\0\0\0\0\0\0\x50\0\0\0\0\0\0\0\x1b\0\0\0\x0b\0\0\0\x08\
\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x47\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x0c\x05\0\0\0\0\0\0\xa0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x43\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf8\x12\
\0\0\0\0\0\0\x60\x02\0\0\0\0\0\0\x1b\0\0\0\x0d\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\
\0\0\0\0\0\x65\0\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xac\x05\0\0\0\
\0\0\0\xe5\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\
\x84\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x91\x07\0\0\0\0\0\0\x50\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x80\0\0\0\x09\0\
\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x58\x15\0\0\0\0\0\0\x90\0\0\0\0\0\0\0\
\x1b\0\0\0\x10\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x28\x01\0\0\x01\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe4\x07\0\0\0\0\0\0\xc5\x05\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x24\x01\0\0\x09\0\0\0\x40\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xe8\x15\0\0\0\0\0\0\x80\0\0\0\0\0\0\0\x1b\0\0\0\x12\0\0\
\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x19\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\xac\x0d\0\0\0\0\0\0\xe0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x15\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x68\x16\0\0\0\0\0\0\xb0\0\0\0\0\0\0\0\x1b\0\0\0\x14\0\0\0\x08\0\0\0\0\0\0\0\
\x10\0\0\0\0\0\0\0\xdb\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x90\x0e\
\0\0\0\0\0\0\x28\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\xd7\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x17\0\0\0\0\0\0\
\x20\0\0\0\0\0\0\0\x1b\0\0\0\x16\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xcb\
\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb8\x0e\0\0\0\0\0\0\xce\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc7\0\0\0\x09\0\0\0\
\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x38\x17\0\0\0\0\0\0\x80\0\0\0\0\0\0\0\x1b\0\
\0\0\x18\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x70\0\0\0\x01\0\0\0\x30\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x86\x0f\0\0\0\0\0\0\xb4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\x01\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x40\x10\0\0\0\0\0\0\xf8\x01\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\x08\
\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0";

	*sz = sizeof(data) - 1;
	return (const void *)data;
}

#ifdef __cplusplus
struct arena_xdp_kern *arena_xdp_kern::open(const struct bpf_object_open_opts *opts) { return arena_xdp_kern__open_opts(opts); }
struct arena_xdp_kern *arena_xdp_kern::open_and_load() { return arena_xdp_kern__open_and_load(); }
int arena_xdp_kern::load(struct arena_xdp_kern *skel) { return arena_xdp_kern__load(skel); }
int arena_xdp_kern::attach(struct arena_xdp_kern *skel) { return arena_xdp_kern__attach(skel); }
void arena_xdp_kern::detach(struct arena_xdp_kern *skel) { arena_xdp_kern__detach(skel); }
void arena_xdp_kern::destroy(struct arena_xdp_kern *skel) { arena_xdp_kern__destroy(skel); }
const void *arena_xdp_kern::elf_bytes(size_t *sz) { return arena_xdp_kern__elf_bytes(sz); }
#endif /* __cplusplus */

__attribute__((unused)) static void
arena_xdp_kern__assert(struct arena_xdp_kern *s __attribute__((unused)))
{
#ifdef __cplusplus
#define _Static_assert static_assert
#endif
	_Static_assert(sizeof(s->bss->mem) == 8, "unexpected size of 'mem'");
#ifdef __cplusplus
#undef _Static_assert
#endif
}

#endif /* __ARENA_XDP_KERN_SKEL_H__ */
